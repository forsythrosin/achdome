@import "globals";

html, body {
  height: 100%;
  width: 100%;
}

body {
  background: @base;
  color: @highlight;
  font-family: @typeface;
  font-size: @font-size;
  overflow: hidden;
}

h1 {
  text-align: center;
  font-family: @header-typeface;
  font-size: 100px;
  color: white;
  .text-stroke(5px, @accent);
}

#logotype {
  display: block;
  margin: 0 auto;
  width: 350px;
  height: 350px;
}

.bottom {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

input, button {
  font-family: @typeface;
  font-size: @font-size;
  width: 100%;
  text-align: center;
  padding: 1em 0;
  border: 0;
  border-top: 0.2em solid @base;
  box-sizing: border-box;
  background: white;
  border-radius: 0;
  outline: 0;
}

.warning {
  border-left: 0.4em solid @negative;
  border-right: 0.4em solid @negative;
}

button.positive {
  background: @positive;
  color: @positive-dark;
}

.player {
  overflow: hidden;

  .identifier {
    float: left;
    width: 2em;
    height: 2em;
    .radius(50%);
  }

  .name {
    float: left;
    padding: 0.35em;
  }
}

.gameController {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  .button {
    position: absolute;
    cursor: pointer;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0);

    .center {
      display: table-cell;
      vertical-align: middle;
      text-align: center;
    }
  }

  .button:after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-size: 30%;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    .opacity(0.5);
  }

  #positionInfo {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: @base;

    #domeContainer {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 50%;

      #dome {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background: black;
        border-radius: 50%;

        .identifier {
          float: none;
          position: absolute;
        }
      }
    }

    .button#startMoving {
      background: @positive;
      right: 0;
      width: 50%;
      overflow: hidden;
    }

    /* Chrome, Safari, Opera */
    @-webkit-keyframes rollImage {
      0%  {
            background-position: 50% 100%;
            .opacity(0)
          }
      50% {
            background-position: 50% 50%;
            .opacity(0.75)
          }
      100%{
            background-position: 50% 0%;
            .opacity(0)
          }
    }

    /* Standard syntax */
    @keyframes rollImage {
      0%  {
            background-position: 50% 100%;
            .opacity(0)
          }
      50% {
            background-position: 50% 50%;
            .opacity(0.75)
          }
      100%{
            background-position: 50% 0%;
            .opacity(0)
          }
    }

    .button#startMoving:after {
      background-image: url('../images/up.png');
      .loop(rollImage, 1.3s);
    }
  }

  #buttonDivider {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 1px;
    background: rgba(255,255,255,0.5);
  }

  .button#left {
    width: 50%;
    left: 0;
  }

  .button#left:after {
    background-image: url('../images/left.png');
  }

  .button#right {
    width: 50%;
    right: 0;
  }

  .button#right:after {
    background-image: url('../images/right.png');
  }

  .button#left.active, .button#right.active {
    background: rgba(0,0,0,0.1);
  }
}

/* Chrome, Safari, Opera */
@-webkit-keyframes dualRotation {
  0%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:white;}
  25%   {.transform(~"rotateX(90deg) rotateY(0deg)");background:white;}
  26%   {.transform(~"rotateX(90deg) rotateY(0deg)");background:@accent;}
  50%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:@accent}
  75%   {.transform(~"rotateX(0deg) rotateY(90deg)");background:@accent}
  76%   {.transform(~"rotateX(0deg) rotateY(90deg)");background:white}
  100%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:white}
}

/* Standard syntax */
@keyframes dualRotation {
  0%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:white;}
  25%   {.transform(~"rotateX(90deg) rotateY(0deg)");background:white;}
  26%   {.transform(~"rotateX(90deg) rotateY(0deg)");background:@accent;}
  50%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:@accent}
  75%   {.transform(~"rotateX(0deg) rotateY(90deg)");background:@accent}
  76%   {.transform(~"rotateX(0deg) rotateY(90deg)");background:white}
  100%   {.transform(~"rotateX(0deg) rotateY(0deg)");background:white}
}

.loader {
  width: 50px;
  height: 50px;
  background: #ddd;
  .radius(5px);
  .loop(dualRotation, 1.3s);
}

@import "portrait";
